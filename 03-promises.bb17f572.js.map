{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAaC,SAASC,cAAc,uBACtCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,QAIlC,SAASI,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACHH,EACAF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAExBA,E,IAZXQ,SAAWf,SAASC,cAAc,yBAgBlCc,SAASC,iBAAiB,SAAS,SAACC,GAChCA,EAAEC,iBAKF,IAHA,IAAIC,EAAQC,OAAOrB,EAAWsB,OAC1BC,EAAOF,OAAOlB,EAAUmB,OAEnBE,EAAI,EAAGA,EAAIpB,EAAOkB,MAAOE,IAC9BlB,EAAc,EAAIkB,EAAGJ,EAAQI,EAAID,GAC5BE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACfmB,EAAA7B,GAAS8B,OAAOC,QACZ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGrDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAChBmB,EAAA7B,GAAS8B,OAAOI,QACZ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGlDyB,SAAQ,W,OAAM5B,EAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst firstDelay = document.querySelector('input[name=\"delay\"]'),\n    delayStep = document.querySelector('input[name=\"step\"]'),\n    amount = document.querySelector('input[name=\"amount\"]'),\n    form = document.querySelector(\"form\");\n\nbtnStart = document.querySelector(\"button[type='submit']\");\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n}\n\nbtnStart.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n\n    let delay = Number(firstDelay.value),\n        step = Number(delayStep.value);\n\n    for (let i = 0; i < amount.value; i++)\n        createPromise(1 + i, delay + i * step)\n            .then(({ position, delay }) => {\n                Notiflix.Notify.success(\n                    `✅ Fulfilled promise ${position} in ${delay}ms`\n                );\n            })\n            .catch(({ position, delay }) => {\n                Notiflix.Notify.failure(\n                    `❌ Rejected promise ${position} in ${delay}ms`\n                );\n            })\n            .finally(() => form.reset());\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","btnStart","addEventListener","e","preventDefault","delay1","Number","value","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","reset"],"version":3,"file":"03-promises.bb17f572.js.map"}